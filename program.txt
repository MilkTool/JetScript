print("7 + 7 - 2 = ", 7+7-2);
fun test(x, y, z)
{
	print(x,y,z);
	return x+y+z;
}
test(1,2,3);

j = 0;
//j();
//local x;

//f = fopen("jetio.txt", "w");
//f:write("Hi i'm output by the programming language, Jet!");

local string = "hello";
print("Hello is: ", string:length(), " characters long!");

file = fopen("output.txt", "r");
print("File contains: ", file:read(10));
//fclose(file);

file = 0;

gc();

escapetest = "this is a newline\n\n\n\n";
print(escapetest);
op = {};
op.check = fun(arg)
{
	print("hi from member func! arg was:", arg);
};

obj = {};
obj = setprototype(obj, op);
obj.check("test");

test = [1,2,3,4,5,6,7,8,9];
p = test:add(10);
print("Sise of test is: ", test:size());
print("Testing for each loop: ");
-[[for (local v in test)
{
	print(v);
}]]-
test[2] = [];
test[2][2] = [];

rec = {a = 2, b = 3, "test" = 6};
rec[1] = {};
rec[1].id = 55;

rec[2] = {};
rec[2].id = 56;
rec[1].second = rec[2];
rec[2] = 0;
//rec[1] = 0;

test = 0;
//test[2] = 0;
//return;
print(tan(3.1415926535895));
btest = 4 | 5;
print(btest);
apples = {};
apples.two = 7;
apples["hello"] = "testing";
apples.a7 = 6;


//gc test code
cur = {};
begin = cur;
for (i = 0; i < 10000; i++)
{
	cur.next = {};
	cur = cur.next;
}
//begin = 0;
//cur = 0;


//return;

test77 = fun (x,y)
{
	return x+y;
};
print(test77(2,2));
test22 = [];
//test22[5+2] = 6;
//test22[23] = [];
//test22[23][0] = "hello";
//test22[23][1] = [];
//test22[23][1][0] = "test";
test23 = test22;
test22[89] = test77;
print(test22[89](2,2));
//local hi = 7;
//hi = 2;
for (local x = 0; x < 22; x++)
{
	test22[x] = x*2;
}
test22[80] = 5;
test22[80]++;
fun fibo(n)
{
	if (n < 2)
		return n;
	else
		return fibo(n-1)+fibo(n-2);
}
print("Fibonacci of 10: ", fibo(10));
//return;

print("swap test should be 1 2");
local a = 2;
b = 1;
a <> b;
print(a,b);
test = 7;
ans = 0;
for (local i = 0; i < 1000; i++)
{
	local test = 5+i;
	if (i%3 == 0)
		ans = ans + i;
	else if (i%5 == 0)
		ans = ans + i;
}
test = 5;
//return ans;
//p();
test = 6;
myglobal = 3.1415926535895;
print("hi I am global code");

fun argtest(a1, a2, a3)
{
	print(a1," ", a2, " ", a3);
}

fun hi()
{
	//p();
	//p();
	print("Testing += and -=...");
	local t1 = 7;
	t1 += 7;
	
	local t2 = 6;
	t2 -= 3;
	t2 -= 7;
	
	local t3 = 6;
	t3 *= 2;
	
	local t4 = 9;
	t4 /= 3;
	print(t1," ",t2," ",t3, " ", t4);
	
	
	argtest(1,2,3);
	a = 5;
	b = 6;
	local postfixtest = a++ * b++;
	print("Should be ", 30, " was ", postfixtest);
	fun test(a)
	{
		print("this should only be said once: test function worked ", a);
	}
	test(1);
	
	//hi = 1;
	ore = 0;
	ore++;
	//return 7;
	looptest = 0;
	looptest2 = 0;
	looptest3 = 0;
	for (i = 0; i < 22; i++)
	{
		if ( looptest < 20)
			looptest++;
		else
			looptest2++;
		looptest3++;
	}
	return 7;
}

fun main()
{
	print("Wut");
	hi();
	return 7;
	local strtest = "apple" + " pie" + " is " + "tasty";
	strtest++;
	print(strtest);
	//p = 6;
	hi();
	apple = "testo;wanfkodsfsa";
	-[[problem 3]]-
	-[[while (n1 < 1000)
	{
		while (n2 < 1000)
		{
			ispalin(n1*n2);
			n2++;
		}
		n2 = 0;
		n1++;
	}
	return;]]-
	-[[problem 2]]-
	sum = 2;
	fib2 = 2;
	fib = 1;
	-[[while (fib2 < 4000000)
	{
		fib <> fib2;
		temp = fib+fib2;
		fib2 <> temp;

		if (fib2%2 == 0)
		{
			if (fib2 < 4000000)
			{
				print(fib2);
				sum = sum + fib2;
			}
		}
	}]]-
	//return sum;
	-[[problem 1]]-
	sum = 0;
	num = 0;
	while (num - 1000)
	{
		if ((num%3) == 0)
			sum = sum + num;
		else if ((num%5) == 0)
			sum = sum + num;
		num++;
	}
	//return;
	print(5,7,8);
	//hi();
	apple = 2;
	ta2 = 6;
	tb2 = 2;
	-[[ta2 = tb2 = apple;]]-
	-[[apple = ta2 = tb2;]]-
	pie = ta2 <> tb2;
	his = print;
	his();
	found = 0;
	number = 1;
	while (number < 500)
	{
		//hi();
		count = 0;
		a = 1;
		while (number-a+1)
		{
			if (number%a == 0)
				count++;
			++a;
		}
		if (count-2 == 0)
			found++;
		number++;
	}
	print("Found: ", found, " primes!");
	return found;
}

main();
print("hi");
return "hello";